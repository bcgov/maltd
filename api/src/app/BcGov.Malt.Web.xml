<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BcGov.Malt.Web</name>
    </assembly>
    <members>
        <member name="T:BcGov.Malt.Web.Controllers.ProjectsController">
            <summary>
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.ProjectsController.#ctor(BcGov.Malt.Web.Services.IProjectService,BcGov.Malt.Web.Services.IUserSearchService,BcGov.Malt.Web.Services.IUserManagementService)">
            <summary>Initializes a new instance of the <see cref="T:BcGov.Malt.Web.Controllers.ProjectsController"/> class.</summary>
            <param name="projectService">The project service.</param>
            <param name="userSearchService"></param>
            <param name="userManagementService"></param>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.ProjectsController.GetAsync">
            <summary>
            Gets the list of available projects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.ProjectsController.AddUserToProjectAsync(System.String,System.String)">
            <summary>Adds a user to a project.</summary>
            <param name="username">The username of the user</param>
            <param name="project">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.ProjectsController.RemoveUserFromProjectAsync(System.String,System.String)">
            <summary>Removes a user from a project.</summary>
            <param name="username">The username of the user.</param>
            <param name="project">The project identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.ProjectsController.AddOrRemoveUserFromProject(System.String,System.String,System.Func{BcGov.Malt.Web.Models.User,BcGov.Malt.Web.Models.Project,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            Adds or removes a user from project.
            </summary>
            <param name="project">The project.</param>
            <param name="username">The username.</param>
            <param name="operation">The add/remove operation.</param>
            <returns></returns>
        </member>
        <member name="T:BcGov.Malt.Web.Controllers.UsersController">
            <summary>
            Provides access to users
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.UsersController.#ctor(BcGov.Malt.Web.Services.IUserSearchService,BcGov.Malt.Web.Services.IUserManagementService)">
            <summary>Initializes a new instance of the <see cref="T:BcGov.Malt.Web.Controllers.UsersController" /> class.</summary>
            <param name="userSearchService">The user search service.</param>
            <param name="userManagementService"></param>
            <param name="logger">The logger.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="userSearchService" />, <paramref name="userManagementService" /> 
            or <paramref name="logger" /> is null.
            </exception>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.UsersController.SearchAsync(System.String)">
            <summary>Searches for a user.</summary>
            <param name="query">The username to search for.</param>
            <returns>The found user or 400, 401 or 404 status codes.</returns>
        </member>
        <member name="M:BcGov.Malt.Web.Controllers.UsersController.LookupAsync(System.String)">
            <summary>Gets a user</summary>
            <param name="username">The username to get</param>
            <returns>The user details or 400, 401 or 404 status codes</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Models.DetailedUser">
            <summary>
            Represents a user with the currently assigned projects
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Models.DetailedUser.#ctor(BcGov.Malt.Web.Models.User,System.Collections.Generic.IEnumerable{BcGov.Malt.Web.Models.Project})">
            <summary>Initializes a new instance of the <see cref="T:BcGov.Malt.Web.Models.DetailedUser"/> class.</summary>
            <param name="user">The user.</param>
            <param name="projects">The projects.</param>
        </member>
        <member name="P:BcGov.Malt.Web.Models.DetailedUser.Projects">
            <summary>
            The projects the user is assigned to.
            </summary>
        </member>
        <member name="T:BcGov.Malt.Web.Models.Project">
            <summary>
            Represents a project that a user can be granted access to.
            </summary>
        </member>
        <member name="P:BcGov.Malt.Web.Models.Project.Id">
            <summary>
            The id of the project
            </summary>
        </member>
        <member name="P:BcGov.Malt.Web.Models.Project.Name">
            <summary>
            The name of the project
            </summary>
        </member>
        <member name="P:BcGov.Malt.Web.Models.Project.Type">
            <summary>
            The type of project, ie Dynamics or SharePoint
            </summary>
        </member>
        <member name="T:BcGov.Malt.Web.Models.User">
            <summary>
            Represents a KeyCloak user
            </summary>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.Id">
            <summary>Gets or sets the identifier.</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.UserName">
            <summary>Gets or sets the name of the user.</summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.Enabled">
            <summary>Gets or sets the enabled flag of the user.</summary>
            <value>The enabled.</value>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.FirstName">
            <summary>Gets or sets the first name.</summary>
            <value>The first name.</value>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.LastName">
            <summary>Gets or sets the last name.</summary>
            <value>The last name.</value>
        </member>
        <member name="P:BcGov.Malt.Web.Models.User.Email">
            <summary>Gets or sets the email.</summary>
            <value>The email.</value>
        </member>
        <member name="T:BcGov.Malt.Web.Program">
            <summary>
            The Program class represents the main entry point to the API.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Program.Main(System.String[])">
            <summary>
            The main entry point.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host builder.
            </summary>
        </member>
        <member name="T:BcGov.Malt.Web.Services.InMemoryProjectService">
            <summary>
            An in memory version of the project service used for testing.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryProjectService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BcGov.Malt.Web.Services.InMemoryProjectService"/> class.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryProjectService.GetProjectsAsync">
            <summary>
            Gets the list of available projects.
            </summary>
            <returns>The list of available projects</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Services.InMemoryUserManagementService">
            <summary>
            A mock, in memory user management service.
            </summary>
            <seealso cref="T:BcGov.Malt.Web.Services.IUserManagementService" />
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryUserManagementService.AddUserToProjectAsync(BcGov.Malt.Web.Models.User,BcGov.Malt.Web.Models.Project)">
            <summary>
            Adds a user to a project.
            </summary>
            <param name="user">The user to change</param>
            <param name="project">The project to add the user to</param>
            <returns>Returns <c>true</c> if the user was added to the project, otherwise <c>false</c></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryUserManagementService.RemoveUserFromProjectAsync(BcGov.Malt.Web.Models.User,BcGov.Malt.Web.Models.Project)">
            <summary>
            Removes a user from a project.
            </summary>
            <param name="user">The user to change</param>
            <param name="project">The project to remove the user from.</param>
            <returns>Returns <c>true</c> if the user was removed from the project, otherwise <c>false</c></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryUserManagementService.GetProjectsForUserAsync(BcGov.Malt.Web.Models.User)">
            <summary>
            Gets all the projects a user is assigned to.
            </summary>
            <param name="user">The user to get projects for.</param>
            <returns>The list of projects a user is currently assigned to.</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Services.InMemoryUserSearchService">
            <summary>Represents a class that searches from a hard coded list of users.</summary>
            <seealso cref="T:BcGov.Malt.Web.Services.IUserSearchService" />
        </member>
        <member name="M:BcGov.Malt.Web.Services.InMemoryUserSearchService.SearchAsync(System.String)">
            <summary>Searches for a user asynchronously.</summary>
            <param name="query">The username to query for</param>
            <returns>The found user or null if not found.</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Services.IProjectService">
            <summary>
            Provides access to the list of available projects.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Services.IProjectService.GetProjectsAsync">
            <summary>
            Gets the list of projects.
            </summary>
            <returns>A list of projects</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Services.IUserManagementService">
            <summary>
            Provides the ability to add or remove users from projects
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Services.IUserManagementService.AddUserToProjectAsync(BcGov.Malt.Web.Models.User,BcGov.Malt.Web.Models.Project)">
            <summary>
            Adds a user to a project.
            </summary>
            <param name="user">The user to change</param>
            <param name="project">The project to add the user to</param>
            <returns>Returns <c>true</c> if the user was added to the project, otherwise <c>false</c></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Services.IUserManagementService.RemoveUserFromProjectAsync(BcGov.Malt.Web.Models.User,BcGov.Malt.Web.Models.Project)">
            <summary>
            Removes a user from a project.
            </summary>
            <param name="user">The user to change</param>
            <param name="project">The project to remove the user from.</param>
            <returns>Returns <c>true</c> if the user was removed from the project, otherwise <c>false</c></returns>
        </member>
        <member name="M:BcGov.Malt.Web.Services.IUserManagementService.GetProjectsForUserAsync(BcGov.Malt.Web.Models.User)">
            <summary>
            Gets all the projects a user is assigned to.
            </summary>
            <param name="user">The user to get projects for.</param>
            <returns>The list of projects a user is currently assigned to.</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Services.IUserSearchService">
            <summary>
            An interface for searching for users.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Services.IUserSearchService.SearchAsync(System.String)">
            <summary>Searches for a user asynchronously.</summary>
            <param name="query">The username to query for</param>
            <returns>The found user or null if not found.</returns>
        </member>
        <member name="T:BcGov.Malt.Web.Startup">
            <summary>
            The Startup class configures services and the app's request pipeline.
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:BcGov.Malt.Web.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:BcGov.Malt.Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The service description collection.</param>
        </member>
        <member name="M:BcGov.Malt.Web.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application builder.</param>
            <param name="env">The web hosting environment.</param>
        </member>
    </members>
</doc>
